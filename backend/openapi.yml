openapi: 3.0.0
info:
  title: To-Do List API
  description: Operation for Tasks.
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
    description: for develop
paths:
  /tasks:
    post:
      summary: Add new task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                reminderTime:
                  type: string
              required:
                - message
            example: { "message": "test task message" }
      responses:
        "201":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/Task"
              example:
                task:
                  {
                    "id": "62d44b90b928882b63cadbe2",
                    "message": "test task message",
                    "completed": "N",
                    "priority": "Low",
                  }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/400ErrorResponse"
  /tasks/{id}:
    put:
      summary: Update task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/TaskParams"
            example:
              {
                "message": "test task message",
                "completed": "N",
                "priority": "Low",
              }
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/Task"
              example:
                task:
                  {
                    "id": "62d44b90b928882b63cadbe2",
                    "message": "test task message",
                    "completed": "N",
                    "priority": "Low",
                  }
        "400":
          description: Task id not found or not availed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/400ErrorResponse"
              example:
                task: { message: "Task id 62d44b90b928882b63cadbe2 not found" }
    delete:
      summary: Delete task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful
        "400":
          description: Task id not found or not availed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/400ErrorResponse"
              example:
                task: { message: "Task id 62d44b90b928882b63cadbe2 not found" }
  /tasks/{id}/be-done:
    put:
      summary: Complete task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/Task"
              example:
                task:
                  {
                    "id": "62d44b90b928882b63cadbe2",
                    "message": "test task message",
                    "completed": "Y",
                    "priority": "Low",
                  }
        "400":
          description: Task id not found or not availed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/400ErrorResponse"
              example:
                task: { message: "Task id 62d44b90b928882b63cadbe2 not found" }
  /tasks/to-do:
    get:
      summary: Get uncompleted tasks
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
              example:
                tasks:
                  [
                    {
                      "id": "62d44b90b928882b63cadbe2",
                      "message": "test task message",
                      "completed": "N",
                      "priority": "Low",
                    },
                    {
                      "id": "62d44c3d6b3fc4f516d2f6a0",
                      "message": "test task message2",
                      "completed": "N",
                      "priority": "Low",
                    },
                  ]
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/400ErrorResponse"
  /tasks/be-done:
    get:
      summary: Get completed tasks
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
              example:
                tasks:
                  [
                    {
                      "id": "62d44b90b928882b63cadbe2",
                      "message": "test task message",
                      "completed": "Y",
                      "priority": "Low",
                    },
                    {
                      "id": "62d44c3d6b3fc4f516d2f6a0",
                      "message": "test task message2",
                      "completed": "Y",
                      "priority": "Low",
                    },
                  ]
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/400ErrorResponse"

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        completed:
          type: string
        priority:
          type: string
    TaskParams:
      properties:
        message:
          type: string
        completed:
          type: string
        priority:
          type: string
        reminderTime:
          type: string
      required:
        - message
        - completed
        - priority
    400ErrorResponse:
      type: object
      properties:
        message:
          type: string
    500ErrorResponse:
      type: object
      properties:
        statusCode:
          type: number
        error:
          type: string
        message:
          type: string
